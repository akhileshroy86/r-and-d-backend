generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      UserRole
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  doctor  Doctor?
  patient Patient?
  staff   Staff?

  @@map("users")
}

model Doctor {
  id           String @id @default(cuid())
  userId       String @unique
  firstName    String
  lastName     String
  specialization String
  licenseNumber String @unique
  phone        String
  
  user         User @relation(fields: [userId], references: [id])
  appointments Appointment[]
  
  @@map("doctors")
}

model Patient {
  id          String   @id @default(cuid())
  userId      String   @unique
  firstName   String
  lastName    String
  dateOfBirth DateTime
  phone       String
  address     String?
  
  user         User @relation(fields: [userId], references: [id])
  appointments Appointment[]
  
  @@map("patients")
}

model Staff {
  id        String @id @default(cuid())
  userId    String @unique
  firstName String
  lastName  String
  position  String
  phone     String
  
  user User @relation(fields: [userId], references: [id])
  
  @@map("staff")
}

model Appointment {
  id          String            @id @default(cuid())
  patientId   String
  doctorId    String
  dateTime    DateTime
  duration    Int               @default(30)
  status      AppointmentStatus @default(SCHEDULED)
  notes       String?
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  
  patient Patient @relation(fields: [patientId], references: [id])
  doctor  Doctor  @relation(fields: [doctorId], references: [id])
  
  @@map("appointments")
}

enum UserRole {
  ADMIN
  DOCTOR
  PATIENT
  STAFF
}

enum AppointmentStatus {
  SCHEDULED
  CONFIRMED
  IN_PROGRESS
  COMPLETED
  CANCELLED
  NO_SHOW
}